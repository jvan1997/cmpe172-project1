service: cmpe-172-proj2-api
package:
  individually: true

plugins:
  - serverless-bundle 
  - serverless-offline
custom:
  stage: ${opt:stage, self:provider.stage}
  tableName: ${self:custom.stage}-posts

provider:
  name: aws
  runtime: nodejs10.x
  stage: dev
  region: us-west-2

  environment:
    tableName: ${self:custom.tableName}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: 
        - "Fn::GetAtt": [ PostsTable, Arn ]

functions:
  create:
    handler: create.main
    events:
      - http:
          path: posts
          method: post
          cors: true
          authorizer: aws_iam
  get:
    handler: get.main
    events:
      - http:
          path: posts/{id}
          method: get
          cors: true
          authorizer: aws_iam
  adminGet:
    handler: adminGet.main
    events:
      - http:
          path: adminposts/{id}
          method: get
          cors: true
          authorizer: aws_iam

  list:
    handler: list.main
    events:
      - http:
          path: posts
          method: get
          cors: true
          authorizer: aws_iam
  adminList:
    handler: adminList.main
    events:
      - http:
          path: adminposts
          method: get
          cors: true
          authorizer: aws_iam
  update:
    handler: update.main
    events:
      - http:
          path: posts/{id}
          method: put
          cors: true
          authorizer: aws_iam    
  delete:
    handler: delete.main
    events:
      - http:
          path: posts/{id}
          method: delete
          cors: true
          authorizer: aws_iam
  adminDelete:
    handler: adminDelete.main
    events:
      - http:
          path: adminposts/{id}
          method: delete
          cors: true
          authorizer: aws_iam

# Create our resources with separate CloudFormation templates
resources:
  - ${file(resources/api-gateway-errors.yml)}
  - ${file(resources/database.yml)}
  - ${file(resources/s3.yml)}
  - ${file(resources/user.yml)}
  - ${file(resources/identity.yml)}

